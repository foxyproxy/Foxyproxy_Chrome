{
  "name": "grunt-chrome-manifest",
  "version": "0.1.1",
  "description": "get scripts/css file list from manifest to handle, and initialize the grunt configuration appropriately, and automatically. then replaces references to non-optimized scripts into the transformed background scripts. and auto increment build version in manifest.json.",
  "keywords": [
    "gruntplugin",
    "grunt",
    "yeoman",
    "chrome",
    "manifest"
  ],
  "homepage": "",
  "bugs": {
    "url": "https://github.com/ragingwind/grunt-chrome-manifest/issues"
  },
  "author": {
    "name": "ragingwind@gmail.com"
  },
  "main": "Gruntfile.js",
  "repository": {
    "type": "git",
    "url": "git@github.com:ragingwind/grunt-chrome-manifest.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "dependencies": {},
  "devDependencies": {
    "grunt": "~0.4.0",
    "mocha": "~1.7.4",
    "mkdirp": "~0.3.1",
    "rimraf": "~2.0.1",
    "grunt-contrib-jshint": "~0.1.1"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "licenses": {
    "type": "BSD"
  },
  "readme": "# grunt-chrome-manifest\n\nget scripts/css file list from manifest to handle, and initialize the grunt configuration appropriately, and automatically. then replaces references to non-optimized scripts into the transformed background scripts. and auto increment build version in manifest.json.\n\n## Getting Started\nIf you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a [gruntfile][Getting Started] as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n\n```shell\nnpm install grunt-chrome-manifest --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-chrome-manifest');\ngrunt.registerTask('default', ['chromeManifest:dist']);\n```\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n\n## Workflow\nchrome-manifest is composed of 3 steps:\n\n- **prepare**: detects `background` and `content_script` javascript and css files in manifest and update the grunt config to run `concat` `cssmin` and `uglify`. but `content_scripts` javascript files and excluded 'background' javascript files does not perform the `concat` task.\n- **buildnumber**: detects `buildnumber` and increased if set to true.\n- **cleanup**: detects javascripts files for develop in manifest and remove them from manifest.json for distribution.\n\n## Documentation\n\n### Example usage\n```javascript\nchromeManifest: {\n  dist: {\n    options: {\n      buildnumber: true,\n      background: {\n        target: 'scripts/background.js',\n        exclude: [\n          'background/scripts/chromereload.js'\n        ]\n      }\n    },\n    src: 'app',\n    dest: 'dist'\n  }\n};\n```\n\n### Config\n\n#### src\n**Required**\nType: 'String'\n\nBase directory where the origin source files\n\n#### dest\n**Required**\nType: 'String'\n\nBase directory where the transformed files should be output.\n\n### Options\n#### buildnumber\nType: 'Boolean'\n\nFlag of auto-increment build number.\n\n#### background\n\n##### target\nType: 'String'\n\nRelative path of the transformed(`cssmin` and `uglify`) background script.\n\n##### exclude\nType: 'String'\n\nThe paths of script in manifest.json that will be exclude.\n\n## Tests\n\nGrunt currently doesn't have a way to test tasks directly. You can test this task by running `grunt` and manually verify that it works.\n\n## License\n\n[BSD license](http://opensource.org/licenses/bsd-license.php) and copyright Google\n",
  "readmeFilename": "README.md",
  "_id": "grunt-chrome-manifest@0.1.1",
  "dist": {
    "shasum": "7859efb3ce8640dd6070bbeea551bdd8348fc233"
  },
  "_from": "grunt-chrome-manifest@~0.1.0",
  "_resolved": "https://registry.npmjs.org/grunt-chrome-manifest/-/grunt-chrome-manifest-0.1.1.tgz"
}
